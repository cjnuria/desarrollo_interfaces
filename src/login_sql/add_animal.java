package login_sql;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.ColorUIResource;
import javax.swing.table.DefaultTableModel;
import metodos.TextPrompt;
import metodos.Utilidades_Control;

/**
 *
 * @author nuria
 */
public class add_animal extends javax.swing.JFrame {

    /**
     * Creates new form add_animal
     */
    public add_animal() {
        initComponents();
        ListarEspecies();
//        Ui.put("nimbusBlueGrey", new ColorUIResource(103, 0, 3));
        jTableRellenarAnimales.getTableHeader().setForeground(Color.BLACK);

        Font myFont2 = new Font("Roboto light", Font.BOLD, 18);

        jTableRellenarAnimales.getTableHeader().setFont(myFont2);

        // poner text fiel con ejemplo clarito
        TextPrompt placeholder = new TextPrompt("Peso del animal en kg", jtPesoAnimal);
        TextPrompt placeholder1 = new TextPrompt("Raza del animal", jtRazaAnimal);
        TextPrompt placeholder2 = new TextPrompt("Nombre del animal", jtNombreAnimal);

    }

    //______________________________________________________________________________________________________
    // LISTAR ESPECIES
    public void ListarEspecies() {

        String consulta_sql = " SELECT * FROM especie";

        ResultSet resultado = DBManager_login.obtener_tablas(DEFAULT_CURSOR, DISPOSE_ON_CLOSE, consulta_sql);
        // guardas en resultado en esta variable y el default te pone por defecto un 0
        try {
            while (resultado.next()) {
                String nombre_especie = resultado.getString("nombre");
                jComboBoxEspecieAnimal.addItem(nombre_especie);
            }
        } catch (SQLException ex) {
            Logger.getLogger(add_animal.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            resultado.close();
        } catch (SQLException ex) {
            Logger.getLogger(add_animal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    //______________________________________________________________________________________________________
    // rellenar tabla animales

    public void rellenar_tabla_animales() {
        String sql = "Select * from animales";
        try {
            ResultSet resultado = DBManager_login.obtener_tablas(DEFAULT_CURSOR, DISPOSE_ON_CLOSE, sql);
            while (resultado.next()) {
                int id_animal = resultado.getInt("id_animales");
                String especie = resultado.getString("especie");
                String nombre = resultado.getString("nombre");
                String raza = resultado.getString("raza");
                String peso = resultado.getString("peso");

                DefaultTableModel model = (DefaultTableModel) jTableRellenarAnimales.getModel();
                Object[] row = {id_animal, especie, nombre, raza, peso};
                model.addRow(row);
            }
            resultado.close();

        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }
    //_____________________________________________________________________________________________________________________

    public void vaciarTablaAnimales() {

        //vaciamos la tabla recorriendola con un bucle for
        DefaultTableModel tb = (DefaultTableModel) jTableRellenarAnimales.getModel();
        int a = jTableRellenarAnimales.getRowCount() - 1; //contamos las filas
        //bucle para borrar todas las filas
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }

    }

    //___________________________________________________________________________________________
    // Vaciar tabla animales para no duplicar datos 
    public void vaciar_tablas() {

        //vaciamos la tabla recorriendola con un bucle for
        DefaultTableModel tb = (DefaultTableModel) jTableRellenarAnimales.getModel();
        int a = jTableRellenarAnimales.getRowCount() - 1; //contamos las filas
        //bucle para borrar todas las filas
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jframe_listar_animales = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRellenarAnimales = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        botonAceptarAnimal = new javax.swing.JButton();
        jtNombreAnimal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtPesoAnimal = new javax.swing.JTextField();
        jtRazaAnimal = new javax.swing.JTextField();
        botonLimpiarAnimal = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxEspecieAnimal = new javax.swing.JComboBox<>();
        jButtonListar_Animales = new javax.swing.JButton();

        jframe_listar_animales.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jframe_listar_animales.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jframe_listar_animales.setLocation(new java.awt.Point(545, 360));
        jframe_listar_animales.setLocationByPlatform(true);
        jframe_listar_animales.setMinimumSize(new java.awt.Dimension(750, 470));
        jframe_listar_animales.setPreferredSize(new java.awt.Dimension(750, 470));
        jframe_listar_animales.setResizable(false);
        jframe_listar_animales.addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                jframe_listar_animalesWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        jframe_listar_animales.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Roboto Light", 1, 24)); // NOI18N
        jLabel5.setText("Listar Animales");
        jLabel5.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        jTableRellenarAnimales.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jTableRellenarAnimales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Animal", "Especie", "Nombre", "Raza", "Peso"
            }
        ));
        jScrollPane1.setViewportView(jTableRellenarAnimales);

        jButton1.setBackground(new java.awt.Color(255, 204, 0));
        jButton1.setFont(new java.awt.Font("Roboto Light", 1, 20)); // NOI18N
        jButton1.setText("Modificar");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 0, 0));
        jButton2.setFont(new java.awt.Font("Roboto Light", 1, 20)); // NOI18N
        jButton2.setText("Borrar");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 219, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel5)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2});

        jframe_listar_animales.getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 740, 460));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Roboto Light", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Añadir Animal");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 250, 70));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgenes/Captura (1).png"))); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 100, 70));

        jLabel2.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Nombre");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 270, 90, 30));

        botonAceptarAnimal.setBackground(new java.awt.Color(102, 153, 0));
        botonAceptarAnimal.setFont(new java.awt.Font("Roboto Light", 0, 24)); // NOI18N
        botonAceptarAnimal.setText("Aceptar");
        botonAceptarAnimal.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonAceptarAnimal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonAceptarAnimalMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonAceptarAnimalMouseExited(evt);
            }
        });
        botonAceptarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarAnimalActionPerformed(evt);
            }
        });
        jPanel1.add(botonAceptarAnimal, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 330, 120, 40));

        jtNombreAnimal.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jtNombreAnimal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 153, 0)));
        jPanel1.add(jtNombreAnimal, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, 260, 40));

        jLabel6.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Especie");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 90, 90, 30));

        jLabel7.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Peso");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, 90, 30));

        jLabel8.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Raza");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 90, 30));

        jtPesoAnimal.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jtPesoAnimal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 153, 0)));
        jPanel1.add(jtPesoAnimal, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, 260, 40));

        jtRazaAnimal.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jtRazaAnimal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 153, 0)));
        jPanel1.add(jtRazaAnimal, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 200, 260, 40));

        botonLimpiarAnimal.setBackground(new java.awt.Color(102, 153, 0));
        botonLimpiarAnimal.setFont(new java.awt.Font("Roboto Light", 0, 24)); // NOI18N
        botonLimpiarAnimal.setText("Limpiar");
        botonLimpiarAnimal.setActionCommand("botonlimpiar");
        botonLimpiarAnimal.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonLimpiarAnimal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonLimpiarAnimalMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonLimpiarAnimalMouseExited(evt);
            }
        });
        botonLimpiarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarAnimalActionPerformed(evt);
            }
        });
        jPanel1.add(botonLimpiarAnimal, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 330, 130, 40));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgenes/Los-10-arboles-mas-grandes-del-mundo.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 450));

        jComboBoxEspecieAnimal.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jComboBoxEspecieAnimal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jComboBoxEspecieAnimal, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, 250, 30));

        jButtonListar_Animales.setBackground(new java.awt.Color(102, 153, 0));
        jButtonListar_Animales.setFont(new java.awt.Font("Roboto Light", 0, 24)); // NOI18N
        jButtonListar_Animales.setForeground(new java.awt.Color(51, 51, 51));
        jButtonListar_Animales.setText("Listar Animales");
        jButtonListar_Animales.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonListar_Animales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonListar_AnimalesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonListar_AnimalesMouseExited(evt);
            }
        });
        jButtonListar_Animales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListar_AnimalesActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonListar_Animales, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 200, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonAceptarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarAnimalActionPerformed
        //BOTON ACEPTAR DE ANIMALES
        // coges cada textfiel y con el get recoge el dato

        String especie = jComboBoxEspecieAnimal.getSelectedItem().toString();
        String nombre = jtNombreAnimal.getText();
        String raza = jtRazaAnimal.getText();

        // insertar animales
        if (especie.equals("") || nombre.equals("") || raza.equals("") || jtPesoAnimal.getText().equals("") || jComboBoxEspecieAnimal.getSelectedItem().equals(null)) {
            JOptionPane.showMessageDialog(null, "Los campos no pueden estar vacios.");

        } else {
            if (DBManager_login.comprobar_si_existe_animal(nombre, especie)) {
                JOptionPane.showMessageDialog(null, "Ese animal ya existe");
            } else {
                String peso = (jtPesoAnimal.getText());// recuerda hacer un casting
                if (!Utilidades_Control.contieneSoloNumeros(peso)) {
                    JOptionPane.showMessageDialog(null, "Este campo solo puede contener numeros");
                    jtPesoAnimal.setText("");
                } else if (!Utilidades_Control.contieneSoloLetras(nombre)) {
                    JOptionPane.showMessageDialog(null, "Este campo solo puede contener letras");
                    jtNombreAnimal.setText("");

                } else if (!Utilidades_Control.contieneSoloLetras(raza)) {
                    JOptionPane.showMessageDialog(null, "Este campo solo puede contener letras");
                    jtRazaAnimal.setText("");
                } else {

                    boolean comprobar = DBManager_login.add_animales(especie, nombre, raza, Float.parseFloat(peso));
                    if (comprobar) {
                        JOptionPane.showMessageDialog(null, "Añadido correctamente");

                    } else {
                        JOptionPane.showMessageDialog(null, "Ha ocurrido un error");
                    }
                }

            }

        }


    }//GEN-LAST:event_botonAceptarAnimalActionPerformed

    private void botonLimpiarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarAnimalActionPerformed

        // limpiar cajas de texto
        jtNombreAnimal.setText("");
        jtPesoAnimal.setText("");
        jtRazaAnimal.setText("");

    }//GEN-LAST:event_botonLimpiarAnimalActionPerformed

    private void jButtonListar_AnimalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListar_AnimalesActionPerformed
        // listar animales

        jframe_listar_animales.setVisible(true);
        vaciarTablaAnimales();
        rellenar_tabla_animales();


    }//GEN-LAST:event_jButtonListar_AnimalesActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // BOTON BORRAR ANIMAL DE LA LISTA
        int fila = jTableRellenarAnimales.getSelectedRow();// coge la fila que has selecionado 
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No se ha selecionado ninguna fila");

        } else {
            int id = (int) jTableRellenarAnimales.getValueAt(fila, 0);
            DBManager_login.borrar_animal(id);

        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // editar Animales
        int fila = jTableRellenarAnimales.getSelectedRow();// coge la fila que has selecionado 
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No se ha selecionado ninguna fila");

        } else {
            int id = (int) jTableRellenarAnimales.getValueAt(fila, 0);// este coje la columna 0 que es la del id
            String especie = (String) jTableRellenarAnimales.getValueAt(fila, 1);
            String raza = (String) jTableRellenarAnimales.getValueAt(fila, 2);
            String nombre = (String) jTableRellenarAnimales.getValueAt(fila, 3);
            String peso = (String) jTableRellenarAnimales.getValueAt(fila, 4);
            editores.editar_animales open = new editores.editar_animales(id, especie, peso, raza, nombre);
            open.setVisible(true);

            // actualizar
            vaciar_tablas();
            rellenar_tabla_animales();
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    private void jframe_listar_animalesWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jframe_listar_animalesWindowGainedFocus
        // actualizar
        vaciar_tablas();
        rellenar_tabla_animales();
    }//GEN-LAST:event_jframe_listar_animalesWindowGainedFocus

    private void jButtonListar_AnimalesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonListar_AnimalesMouseEntered
        // Encima
        jButtonListar_Animales.setBackground(new Color(153, 153, 0));
         jButtonListar_Animales.setCursor(new Cursor(HAND_CURSOR));
    }//GEN-LAST:event_jButtonListar_AnimalesMouseEntered

    private void jButtonListar_AnimalesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonListar_AnimalesMouseExited
        // fuera
        jButtonListar_Animales.setBackground(new Color(102, 153, 0));
    }//GEN-LAST:event_jButtonListar_AnimalesMouseExited

    private void botonAceptarAnimalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAceptarAnimalMouseEntered
        // Encima
        botonAceptarAnimal.setBackground(new Color(153, 153, 0));
        botonAceptarAnimal.setCursor(new Cursor(HAND_CURSOR));
    }//GEN-LAST:event_botonAceptarAnimalMouseEntered

    private void botonAceptarAnimalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAceptarAnimalMouseExited
        // fuera
        botonAceptarAnimal.setBackground(new Color(102, 153, 0));
    }//GEN-LAST:event_botonAceptarAnimalMouseExited

    private void botonLimpiarAnimalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonLimpiarAnimalMouseEntered
        // Encima
        botonLimpiarAnimal.setBackground(new Color(153, 153, 0));
        botonLimpiarAnimal.setCursor(new Cursor(HAND_CURSOR));
    }//GEN-LAST:event_botonLimpiarAnimalMouseEntered

    private void botonLimpiarAnimalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonLimpiarAnimalMouseExited
        // fuera
        botonLimpiarAnimal.setBackground(new Color(102, 153, 0));
    }//GEN-LAST:event_botonLimpiarAnimalMouseExited

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // Encima
        jButton1.setBackground(new Color(255,148,14));
        jButton1.setCursor(new Cursor(HAND_CURSOR));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        // fuera
        jButton1.setBackground(new Color(255,204,0));
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
         // fuera
         jButton2.setBackground(new Color(204,0,0));

    }//GEN-LAST:event_jButton2MouseExited

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
       // encima
         jButton2.setBackground(new Color(233,71,68));
         jButton2.setCursor(new Cursor(HAND_CURSOR));
    }//GEN-LAST:event_jButton2MouseEntered

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(add_animal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(add_animal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(add_animal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(add_animal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new add_animal().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptarAnimal;
    private javax.swing.JToggleButton botonLimpiarAnimal;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonListar_Animales;
    private javax.swing.JComboBox<String> jComboBoxEspecieAnimal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRellenarAnimales;
    private javax.swing.JFrame jframe_listar_animales;
    private javax.swing.JTextField jtNombreAnimal;
    private javax.swing.JTextField jtPesoAnimal;
    private javax.swing.JTextField jtRazaAnimal;
    // End of variables declaration//GEN-END:variables
}
